import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialSchema1759159711967 implements MigrationInterface {
    name = 'InitialSchema1759159711967'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."workspaces_plan_enum" AS ENUM('trial', 'starter', 'professional', 'enterprise')`);
        await queryRunner.query(`CREATE TABLE "workspaces" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP WITH TIME ZONE, "name" character varying(255) NOT NULL, "domain" character varying(255) NOT NULL, "plan" "public"."workspaces_plan_enum" NOT NULL DEFAULT 'trial', "isActive" boolean NOT NULL DEFAULT true, "settings" jsonb NOT NULL DEFAULT '{}', CONSTRAINT "UQ_1900d3cc74165719d5813fe4b5d" UNIQUE ("domain"), CONSTRAINT "UQ_1900d3cc74165719d5813fe4b5d" UNIQUE ("domain"), CONSTRAINT "PK_098656ae401f3e1a4586f47fd8e" PRIMARY KEY ("id")); COMMENT ON COLUMN "workspaces"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "workspaces"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "workspaces"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "workspaces"."name" IS 'Workspace name'; COMMENT ON COLUMN "workspaces"."domain" IS 'Workspace domain'`);
        await queryRunner.query(`CREATE INDEX "IDX_workspaces_name" ON "workspaces" ("name") `);
        await queryRunner.query(`CREATE TYPE "public"."tasks_type_enum" AS ENUM('call', 'email', 'meeting', 'follow_up', 'demo', 'proposal', 'contract', 'onboarding', 'support', 'other')`);
        await queryRunner.query(`CREATE TYPE "public"."tasks_status_enum" AS ENUM('pending', 'in_progress', 'completed', 'cancelled', 'overdue')`);
        await queryRunner.query(`CREATE TYPE "public"."tasks_priority_enum" AS ENUM('low', 'medium', 'high', 'urgent')`);
        await queryRunner.query(`CREATE TABLE "tasks" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP WITH TIME ZONE, "workspaceId" uuid NOT NULL, "title" character varying(255) NOT NULL, "description" text, "type" "public"."tasks_type_enum" NOT NULL DEFAULT 'other', "status" "public"."tasks_status_enum" NOT NULL DEFAULT 'pending', "priority" "public"."tasks_priority_enum" NOT NULL DEFAULT 'medium', "dueDate" TIMESTAMP WITH TIME ZONE, "startedAt" TIMESTAMP WITH TIME ZONE, "completedAt" TIMESTAMP WITH TIME ZONE, "estimatedDuration" integer NOT NULL DEFAULT '0', "actualDuration" integer, "completionNotes" text, "customFields" jsonb, "tags" text, "isRecurring" boolean NOT NULL DEFAULT false, "recurrenceRule" jsonb, "nextOccurrence" TIMESTAMP WITH TIME ZONE, "assigneeId" uuid, "creatorId" uuid, "contactId" uuid, "dealId" uuid, CONSTRAINT "PK_8d12ff38fcc62aaba2cab748772" PRIMARY KEY ("id")); COMMENT ON COLUMN "tasks"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "tasks"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "tasks"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "tasks"."workspaceId" IS 'Workspace ID for multi-tenancy'; COMMENT ON COLUMN "tasks"."title" IS 'Task title'; COMMENT ON COLUMN "tasks"."description" IS 'Task description'; COMMENT ON COLUMN "tasks"."type" IS 'Type of task'; COMMENT ON COLUMN "tasks"."status" IS 'Current task status'; COMMENT ON COLUMN "tasks"."priority" IS 'Task priority level'; COMMENT ON COLUMN "tasks"."dueDate" IS 'Task due date and time'; COMMENT ON COLUMN "tasks"."startedAt" IS 'When task was started'; COMMENT ON COLUMN "tasks"."completedAt" IS 'When task was completed'; COMMENT ON COLUMN "tasks"."estimatedDuration" IS 'Estimated duration in minutes'; COMMENT ON COLUMN "tasks"."actualDuration" IS 'Actual duration in minutes'; COMMENT ON COLUMN "tasks"."completionNotes" IS 'Task completion notes'; COMMENT ON COLUMN "tasks"."customFields" IS 'Custom fields for additional data'; COMMENT ON COLUMN "tasks"."tags" IS 'Tags for categorization'; COMMENT ON COLUMN "tasks"."isRecurring" IS 'Is task recurring'; COMMENT ON COLUMN "tasks"."recurrenceRule" IS 'Recurrence rule configuration'; COMMENT ON COLUMN "tasks"."nextOccurrence" IS 'Next occurrence for recurring tasks'`);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_type" ON "tasks" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_status" ON "tasks" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_priority" ON "tasks" ("priority") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_due_date" ON "tasks" ("dueDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_deal_id" ON "tasks" ("dealId") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_contact_id" ON "tasks" ("contactId") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_due_date_idx" ON "tasks" ("dueDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_workspace_priority" ON "tasks" ("workspaceId", "priority") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_workspace_assignee" ON "tasks" ("workspaceId", "assigneeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_tasks_workspace_status" ON "tasks" ("workspaceId", "status") `);
        await queryRunner.query(`CREATE TYPE "public"."activities_type_enum" AS ENUM('email', 'call', 'meeting', 'note', 'sms', 'task_completion', 'deal_stage_change', 'contact_status_change', 'slack_message', 'slack_thread', 'form_submission', 'document_upload', 'system_event', 'webhook', 'api_call', 'other')`);
        await queryRunner.query(`CREATE TYPE "public"."activities_direction_enum" AS ENUM('inbound', 'outbound', 'internal')`);
        await queryRunner.query(`CREATE TYPE "public"."activities_outcome_enum" AS ENUM('successful', 'failed', 'no_answer', 'voicemail', 'busy', 'scheduled', 'cancelled', 'rescheduled', 'pending')`);
        await queryRunner.query(`CREATE TABLE "activities" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP WITH TIME ZONE, "workspaceId" uuid NOT NULL, "type" "public"."activities_type_enum" NOT NULL, "title" character varying(255) NOT NULL, "description" text, "direction" "public"."activities_direction_enum", "outcome" "public"."activities_outcome_enum", "duration" integer, "occurredAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "scheduledAt" TIMESTAMP WITH TIME ZONE, "completedAt" TIMESTAMP WITH TIME ZONE, "metadata" jsonb, "tags" text, "isPinned" boolean NOT NULL DEFAULT false, "followUpRequired" boolean NOT NULL DEFAULT false, "followUpDate" TIMESTAMP WITH TIME ZONE, "followUpNotes" text, "userId" uuid, "contactId" uuid, "dealId" uuid, "taskId" uuid, "parentActivityId" uuid, CONSTRAINT "PK_7f4004429f731ffb9c88eb486a8" PRIMARY KEY ("id")); COMMENT ON COLUMN "activities"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "activities"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "activities"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "activities"."workspaceId" IS 'Workspace ID for multi-tenancy'; COMMENT ON COLUMN "activities"."type" IS 'Type of activity'; COMMENT ON COLUMN "activities"."title" IS 'Activity title/subject'; COMMENT ON COLUMN "activities"."description" IS 'Activity description/content'; COMMENT ON COLUMN "activities"."direction" IS 'Direction of communication'; COMMENT ON COLUMN "activities"."outcome" IS 'Activity outcome/result'; COMMENT ON COLUMN "activities"."duration" IS 'Duration in minutes'; COMMENT ON COLUMN "activities"."occurredAt" IS 'When the activity occurred'; COMMENT ON COLUMN "activities"."scheduledAt" IS 'Scheduled start time for meetings/calls'; COMMENT ON COLUMN "activities"."completedAt" IS 'When activity was completed'; COMMENT ON COLUMN "activities"."metadata" IS 'Activity-specific metadata'; COMMENT ON COLUMN "activities"."tags" IS 'Tags for categorization'; COMMENT ON COLUMN "activities"."isPinned" IS 'Is activity pinned'; COMMENT ON COLUMN "activities"."followUpRequired" IS 'Is activity a follow-up required'; COMMENT ON COLUMN "activities"."followUpDate" IS 'Follow-up due date'; COMMENT ON COLUMN "activities"."followUpNotes" IS 'Follow-up notes'`);
        await queryRunner.query(`CREATE INDEX "IDX_activities_type" ON "activities" ("type") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_occurred_at" ON "activities" ("occurredAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_created_at" ON "activities" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_occurred_at_idx" ON "activities" ("occurredAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_workspace_deal" ON "activities" ("workspaceId", "dealId") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_workspace_contact" ON "activities" ("workspaceId", "contactId") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_workspace_user" ON "activities" ("workspaceId", "userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_activities_workspace_type" ON "activities" ("workspaceId", "type") `);
        await queryRunner.query(`CREATE TYPE "public"."deals_stage_enum" AS ENUM('lead', 'qualified', 'proposal', 'negotiation', 'closed_won', 'closed_lost')`);
        await queryRunner.query(`CREATE TYPE "public"."deals_priority_enum" AS ENUM('low', 'medium', 'high', 'urgent')`);
        await queryRunner.query(`CREATE TYPE "public"."deals_source_enum" AS ENUM('inbound', 'outbound', 'referral', 'partner', 'event', 'marketing', 'slack', 'other')`);
        await queryRunner.query(`CREATE TABLE "deals" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP WITH TIME ZONE, "workspaceId" uuid NOT NULL, "title" character varying(255) NOT NULL, "value" numeric(12,2) NOT NULL DEFAULT '0', "currency" character varying(3) NOT NULL DEFAULT 'USD', "stage" "public"."deals_stage_enum" NOT NULL DEFAULT 'lead', "priority" "public"."deals_priority_enum" NOT NULL DEFAULT 'medium', "probability" integer NOT NULL DEFAULT '0', "source" "public"."deals_source_enum", "expectedCloseDate" date, "actualCloseDate" date, "description" text, "lossReason" text, "customFields" jsonb, "tags" text, "decisionMakers" integer NOT NULL DEFAULT '1', "budgetConfirmed" boolean NOT NULL DEFAULT false, "lastActivityAt" TIMESTAMP WITH TIME ZONE, "ownerId" uuid, "contactId" uuid, "companyId" uuid, CONSTRAINT "PK_8c66f03b250f613ff8615940b4b" PRIMARY KEY ("id")); COMMENT ON COLUMN "deals"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "deals"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "deals"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "deals"."workspaceId" IS 'Workspace ID for multi-tenancy'; COMMENT ON COLUMN "deals"."title" IS 'Deal title'; COMMENT ON COLUMN "deals"."value" IS 'Deal value in cents'; COMMENT ON COLUMN "deals"."currency" IS 'Currency code'; COMMENT ON COLUMN "deals"."stage" IS 'Current deal stage'; COMMENT ON COLUMN "deals"."priority" IS 'Deal priority level'; COMMENT ON COLUMN "deals"."probability" IS 'Win probability percentage (0-100)'; COMMENT ON COLUMN "deals"."source" IS 'How deal was originated'; COMMENT ON COLUMN "deals"."expectedCloseDate" IS 'Expected close date'; COMMENT ON COLUMN "deals"."actualCloseDate" IS 'Actual close date'; COMMENT ON COLUMN "deals"."description" IS 'Deal description and notes'; COMMENT ON COLUMN "deals"."lossReason" IS 'Reason for loss (if closed lost)'; COMMENT ON COLUMN "deals"."customFields" IS 'Custom fields for additional data'; COMMENT ON COLUMN "deals"."tags" IS 'Tags for categorization'; COMMENT ON COLUMN "deals"."decisionMakers" IS 'Number of decision makers'; COMMENT ON COLUMN "deals"."budgetConfirmed" IS 'Has budget been confirmed'; COMMENT ON COLUMN "deals"."lastActivityAt" IS 'Last activity on this deal'`);
        await queryRunner.query(`CREATE INDEX "IDX_deals_value" ON "deals" ("value") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_stage" ON "deals" ("stage") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_priority" ON "deals" ("priority") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_expected_close" ON "deals" ("expectedCloseDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_value_idx" ON "deals" ("value") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_expected_close_idx" ON "deals" ("expectedCloseDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_workspace_priority" ON "deals" ("workspaceId", "priority") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_workspace_owner" ON "deals" ("workspaceId", "ownerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_deals_workspace_stage" ON "deals" ("workspaceId", "stage") `);
        await queryRunner.query(`CREATE TYPE "public"."companies_industry_enum" AS ENUM('technology', 'healthcare', 'finance', 'education', 'retail', 'manufacturing', 'consulting', 'real_estate', 'other')`);
        await queryRunner.query(`CREATE TYPE "public"."companies_size_enum" AS ENUM('startup', 'small', 'medium', 'large', 'enterprise')`);
        await queryRunner.query(`CREATE TABLE "companies" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP WITH TIME ZONE, "workspaceId" uuid NOT NULL, "name" character varying(255) NOT NULL, "domain" character varying(255), "website" character varying(255), "industry" "public"."companies_industry_enum", "size" "public"."companies_size_enum", "employeeCount" integer, "phone" character varying(20), "description" text, "address" jsonb, "customFields" jsonb, "tags" text, "isActive" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_d4bc3e82a314fa9e29f652c2c22" PRIMARY KEY ("id")); COMMENT ON COLUMN "companies"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "companies"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "companies"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "companies"."workspaceId" IS 'Workspace ID for multi-tenancy'; COMMENT ON COLUMN "companies"."name" IS 'Company name'; COMMENT ON COLUMN "companies"."domain" IS 'Company website domain'; COMMENT ON COLUMN "companies"."website" IS 'Company website URL'; COMMENT ON COLUMN "companies"."industry" IS 'Company industry'; COMMENT ON COLUMN "companies"."size" IS 'Company size'; COMMENT ON COLUMN "companies"."employeeCount" IS 'Number of employees'; COMMENT ON COLUMN "companies"."phone" IS 'Company phone number'; COMMENT ON COLUMN "companies"."description" IS 'Company description'; COMMENT ON COLUMN "companies"."address" IS 'Company address information'; COMMENT ON COLUMN "companies"."customFields" IS 'Custom fields for additional data'; COMMENT ON COLUMN "companies"."tags" IS 'Tags for categorization'; COMMENT ON COLUMN "companies"."isActive" IS 'Is company active'`);
        await queryRunner.query(`CREATE INDEX "IDX_companies_name" ON "companies" ("name") `);
        await queryRunner.query(`CREATE INDEX "IDX_companies_domain" ON "companies" ("domain") `);
        await queryRunner.query(`CREATE INDEX "IDX_companies_industry" ON "companies" ("industry") `);
        await queryRunner.query(`CREATE INDEX "IDX_companies_size" ON "companies" ("size") `);
        await queryRunner.query(`CREATE INDEX "IDX_companies_domain_idx" ON "companies" ("domain") `);
        await queryRunner.query(`CREATE INDEX "IDX_companies_workspace_size" ON "companies" ("workspaceId", "size") `);
        await queryRunner.query(`CREATE INDEX "IDX_companies_workspace_industry" ON "companies" ("workspaceId", "industry") `);
        await queryRunner.query(`CREATE TYPE "public"."contacts_status_enum" AS ENUM('lead', 'prospect', 'qualified', 'customer', 'inactive', 'churned')`);
        await queryRunner.query(`CREATE TYPE "public"."contacts_source_enum" AS ENUM('website', 'referral', 'social_media', 'email_campaign', 'cold_outreach', 'event', 'slack', 'typeform', 'other')`);
        await queryRunner.query(`CREATE TABLE "contacts" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP WITH TIME ZONE, "workspaceId" uuid NOT NULL, "firstName" character varying(100) NOT NULL, "lastName" character varying(100) NOT NULL, "email" character varying(255) NOT NULL, "phone" character varying(20), "jobTitle" character varying(100), "status" "public"."contacts_status_enum" NOT NULL DEFAULT 'lead', "source" "public"."contacts_source_enum", "leadScore" integer NOT NULL DEFAULT '0', "notes" text, "customFields" jsonb, "tags" text, "lastContactedAt" TIMESTAMP WITH TIME ZONE, "emailOptIn" boolean NOT NULL DEFAULT false, "ownerId" uuid, "companyId" uuid, CONSTRAINT "PK_b99cd40cfd66a99f1571f4f72e6" PRIMARY KEY ("id")); COMMENT ON COLUMN "contacts"."createdAt" IS 'Record creation timestamp'; COMMENT ON COLUMN "contacts"."updatedAt" IS 'Record last update timestamp'; COMMENT ON COLUMN "contacts"."deletedAt" IS 'Soft delete timestamp'; COMMENT ON COLUMN "contacts"."workspaceId" IS 'Workspace ID for multi-tenancy'; COMMENT ON COLUMN "contacts"."firstName" IS 'Contact first name'; COMMENT ON COLUMN "contacts"."lastName" IS 'Contact last name'; COMMENT ON COLUMN "contacts"."email" IS 'Contact email address'; COMMENT ON COLUMN "contacts"."phone" IS 'Contact phone number'; COMMENT ON COLUMN "contacts"."jobTitle" IS 'Job title'; COMMENT ON COLUMN "contacts"."status" IS 'Contact lifecycle status'; COMMENT ON COLUMN "contacts"."source" IS 'How contact was acquired'; COMMENT ON COLUMN "contacts"."leadScore" IS 'Lead scoring (0-100)'; COMMENT ON COLUMN "contacts"."notes" IS 'Contact notes'; COMMENT ON COLUMN "contacts"."customFields" IS 'Custom fields for additional data'; COMMENT ON COLUMN "contacts"."tags" IS 'Tags for categorization'; COMMENT ON COLUMN "contacts"."lastContactedAt" IS 'Last time contact was reached out to'; COMMENT ON COLUMN "contacts"."emailOptIn" IS 'Email marketing opt-in status'`);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_email" ON "contacts" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_status" ON "contacts" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_lead_score" ON "contacts" ("leadScore") `);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_lead_score_idx" ON "contacts" ("leadScore") `);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_email_idx" ON "contacts" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_workspace_owner" ON "contacts" ("workspaceId", "ownerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_contacts_workspace_status" ON "contacts" ("workspaceId", "status") `);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('admin', 'manager', 'sales_rep', 'support_agent')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying NOT NULL, "firstName" character varying NOT NULL, "lastName" character varying NOT NULL, "password" character varying NOT NULL, "role" "public"."users_role_enum" NOT NULL DEFAULT 'sales_rep', "slackUserId" character varying, "avatar" character varying, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "tasks" ADD CONSTRAINT "FK_9a16d2c86252529f622fa53f1e3" FOREIGN KEY ("assigneeId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tasks" ADD CONSTRAINT "FK_90bc62e96b48a437a78593f78f0" FOREIGN KEY ("creatorId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tasks" ADD CONSTRAINT "FK_22e88bf5fa06f3df4f4edb1493f" FOREIGN KEY ("contactId") REFERENCES "contacts"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tasks" ADD CONSTRAINT "FK_4d5c77e1b081638da5c4248ac4a" FOREIGN KEY ("dealId") REFERENCES "deals"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "FK_5a2cfe6f705df945b20c1b22c71" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "FK_69986e48aa4993df29847ccd80a" FOREIGN KEY ("contactId") REFERENCES "contacts"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "FK_03bf10281d130b41275928afe1a" FOREIGN KEY ("dealId") REFERENCES "deals"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "FK_9e7aa2051491adb7c7708f26e29" FOREIGN KEY ("taskId") REFERENCES "tasks"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "FK_efc5ef2be96cfb6fbaef958d661" FOREIGN KEY ("parentActivityId") REFERENCES "activities"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "deals" ADD CONSTRAINT "FK_384bbfa448d2c6951031c58de87" FOREIGN KEY ("ownerId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "deals" ADD CONSTRAINT "FK_329413f450746425e2a3d20b3d9" FOREIGN KEY ("contactId") REFERENCES "contacts"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "deals" ADD CONSTRAINT "FK_8824c76128d5ed303cec18e4d71" FOREIGN KEY ("companyId") REFERENCES "companies"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contacts" ADD CONSTRAINT "FK_270a85b7f2d4b6821dc7642e6a8" FOREIGN KEY ("ownerId") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "contacts" ADD CONSTRAINT "FK_f4809f4f9ad4a220959788def42" FOREIGN KEY ("companyId") REFERENCES "companies"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "contacts" DROP CONSTRAINT "FK_f4809f4f9ad4a220959788def42"`);
        await queryRunner.query(`ALTER TABLE "contacts" DROP CONSTRAINT "FK_270a85b7f2d4b6821dc7642e6a8"`);
        await queryRunner.query(`ALTER TABLE "deals" DROP CONSTRAINT "FK_8824c76128d5ed303cec18e4d71"`);
        await queryRunner.query(`ALTER TABLE "deals" DROP CONSTRAINT "FK_329413f450746425e2a3d20b3d9"`);
        await queryRunner.query(`ALTER TABLE "deals" DROP CONSTRAINT "FK_384bbfa448d2c6951031c58de87"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "FK_efc5ef2be96cfb6fbaef958d661"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "FK_9e7aa2051491adb7c7708f26e29"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "FK_03bf10281d130b41275928afe1a"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "FK_69986e48aa4993df29847ccd80a"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "FK_5a2cfe6f705df945b20c1b22c71"`);
        await queryRunner.query(`ALTER TABLE "tasks" DROP CONSTRAINT "FK_4d5c77e1b081638da5c4248ac4a"`);
        await queryRunner.query(`ALTER TABLE "tasks" DROP CONSTRAINT "FK_22e88bf5fa06f3df4f4edb1493f"`);
        await queryRunner.query(`ALTER TABLE "tasks" DROP CONSTRAINT "FK_90bc62e96b48a437a78593f78f0"`);
        await queryRunner.query(`ALTER TABLE "tasks" DROP CONSTRAINT "FK_9a16d2c86252529f622fa53f1e3"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_workspace_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_workspace_owner"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_email_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_lead_score_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_lead_score"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_contacts_email"`);
        await queryRunner.query(`DROP TABLE "contacts"`);
        await queryRunner.query(`DROP TYPE "public"."contacts_source_enum"`);
        await queryRunner.query(`DROP TYPE "public"."contacts_status_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_workspace_industry"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_workspace_size"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_domain_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_size"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_industry"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_domain"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_companies_name"`);
        await queryRunner.query(`DROP TABLE "companies"`);
        await queryRunner.query(`DROP TYPE "public"."companies_size_enum"`);
        await queryRunner.query(`DROP TYPE "public"."companies_industry_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_workspace_stage"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_workspace_owner"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_workspace_priority"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_expected_close_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_value_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_expected_close"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_priority"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_stage"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_deals_value"`);
        await queryRunner.query(`DROP TABLE "deals"`);
        await queryRunner.query(`DROP TYPE "public"."deals_source_enum"`);
        await queryRunner.query(`DROP TYPE "public"."deals_priority_enum"`);
        await queryRunner.query(`DROP TYPE "public"."deals_stage_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_workspace_type"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_workspace_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_workspace_contact"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_workspace_deal"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_occurred_at_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_occurred_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_activities_type"`);
        await queryRunner.query(`DROP TABLE "activities"`);
        await queryRunner.query(`DROP TYPE "public"."activities_outcome_enum"`);
        await queryRunner.query(`DROP TYPE "public"."activities_direction_enum"`);
        await queryRunner.query(`DROP TYPE "public"."activities_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_workspace_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_workspace_assignee"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_workspace_priority"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_due_date_idx"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_contact_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_deal_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_due_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_priority"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_tasks_type"`);
        await queryRunner.query(`DROP TABLE "tasks"`);
        await queryRunner.query(`DROP TYPE "public"."tasks_priority_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tasks_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tasks_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workspaces_name"`);
        await queryRunner.query(`DROP TABLE "workspaces"`);
        await queryRunner.query(`DROP TYPE "public"."workspaces_plan_enum"`);
    }

}
